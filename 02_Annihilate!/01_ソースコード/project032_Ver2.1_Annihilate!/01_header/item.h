//======================================================================================================================
//
//	アイテムヘッダー [item.h]
//	Author：藤田勇一
//
//======================================================================================================================
#ifndef _ITEM_H_					// このマクロ定義がされていない場合
#define _ITEM_H_					// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define MAX_ITEM		(16)		// 使用するモデル数 (アイテムの最大数)

//**********************************************************************************************************************
//	列挙型定義 (ITEMTYPE)
//**********************************************************************************************************************
typedef enum
{
	ITEMTYPE_HEAL = 0,				// 回復アイテム
	ITEMTYPE_MAX,					// この列挙型の総数
} ITEMTYPE;

//**********************************************************************************************************************
//	構造体定義 (Item)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;				// 位置
	D3DXVECTOR3 rot;				// 向き
	D3DXMATRIX  mtxWorld;			// ワールドマトリックス
	Model      *pModelData;			// モデル情報
	int         nType;				// 種類
	int         nCounterEffect;		// エフェクト管理カウンター
	int         nShadowID;			// 影のインデックス
	bool        bUse;				// 使用状況
}Item;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitItem(void);						// アイテムの初期化処理
void UninitItem(void);						// アイテムの終了処理
void UpdateItem(void);						// アイテムの更新処理
void DrawItem(void);						// アイテムの描画処理
void SetItem(D3DXVECTOR3 pos, int nType);	// アイテムの設定処理
Item *GetItem(void);						// アイテムの取得処理

//**********************************************************************************************************************
//	プロトタイプ宣言 (デバッグ用)
//**********************************************************************************************************************
int GetNumItem(void);				// アイテムの総数取得処理

#endif